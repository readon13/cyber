#!/usr/bin/env python2

'''
This script aims to be the most generic and the most explicit possible.
It works with OWASP ZAP API Python client.
To use it, you have to load the Python API client module and start ZAP
Before starting this script for the first time: Open ZAP, go to
Tools -> Options -> API -> Generate random Key, copy and paste the key in the
variable "apiKey" of the configuration area
This script is divided into two parts : a configuration area, where you have to
change variables according to your needs, and the part with API calls.
Author : aine-rb on Github, from Sopra Steria
'''
import os
import time
from pprint import pprint
from zapv2 import ZAPv2


#######################################
### BEGINNING OF CONFIGURATION AREA ###
#######################################
## The user only needs to change variable values bellow to make the script
## work according to his/her needs. MANDATORY parameters must not be empty

# MANDATORY. Define the API key generated by ZAP and used to verify actions.
api='api12345'

def zap_scan(target,reportid):

    localProxy = {"http": "http://127.0.0.1:8080", "https": "http://127.0.0.1:8080"}
    # Connect ZAP API client to the listening address of ZAP instance
    zap = ZAPv2(proxies=localProxy, apikey=api)

    zap.urlopen(target)

    zap.spider.scan(url=target)
    time.sleep(5)

    while (int(zap.spider.status()) < 100):
        print('Active Scan progress: ' + zap.spider.status() + '%')
        time.sleep(5)
    print('Active Scan completed')

    print('HTML report:')


    with open(os.getcwd() + '/cyber/app/report/'+reportid+'_owsapzap.html', 'w') as f: f.write(zap.core.htmlreport(apikey=api))

